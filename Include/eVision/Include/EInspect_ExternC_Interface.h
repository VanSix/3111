#ifndef __EINSPECT_EXTERNC_INTERFACE_H__
#define __EINSPECT_EXTERNC_INTERFACE_H__

#if defined __GNUC__
#define E_DLL0
#else
#if defined E_STATIC
#define E_DLL0
#elif defined E_DLL_EXPORT
#define E_DLL0 _declspec( dllexport )
#else
#define E_DLL0 _declspec( dllimport )
#endif
#endif //__GNUC__
#define E_DLL1


#include "Easy_Extern_C.h"
#include "Extern_C_Types.h"


#ifdef E_EXTERN_C_BUILD

extern "C"
{
  E_DLL0 void E_DLL1 ConvertPointGaugeToShape(void** dst, void* src);
  E_DLL0 int E_DLL1 PointGauge_CopyTo_PointGauge_BOOL_PointGauge(void* impl, void** gauge, int recursive, void** retVal);
  E_DLL0 int E_DLL1 PointGauge_SetCenter_FLOAT32_FLOAT32(void* impl, float x, float y);
  E_DLL0 int E_DLL1 PointGauge_getCenter_Point(void* impl, void** retVal);
  E_DLL0 int E_DLL1 PointGauge_setCenter_Point(void* impl, void* retVal);
  E_DLL0 int E_DLL1 PointGauge_getActive_BOOL(void* impl, int* retVal);
  E_DLL0 int E_DLL1 PointGauge_setActive_BOOL(void* impl, int retVal);
  E_DLL0 int E_DLL1 PointGauge_getLabeled_BOOL(void* impl, int* retVal);
  E_DLL0 int E_DLL1 PointGauge_setLabeled_BOOL(void* impl, int retVal);
  E_DLL0 int E_DLL1 PointGauge_getOptionalDraw_BOOL(void* impl, int* retVal);
  E_DLL0 int E_DLL1 PointGauge_setOptionalDraw_BOOL(void* impl, int retVal);
  E_DLL0 int E_DLL1 PointGauge_getQuickDraw_BOOL(void* impl, int* retVal);
  E_DLL0 int E_DLL1 PointGauge_setQuickDraw_BOOL(void* impl, int retVal);
  E_DLL0 int E_DLL1 PointGauge_getTransitionType_EasyGaugeTransitionType(void* impl, int* retVal);
  E_DLL0 int E_DLL1 PointGauge_setTransitionType_EasyGaugeTransitionType(void* impl, int retVal);
  E_DLL0 int E_DLL1 PointGauge_getTransitionChoice_EasyGaugeTransitionChoice(void* impl, int* retVal);
  E_DLL0 int E_DLL1 PointGauge_setTransitionChoice_EasyGaugeTransitionChoice(void* impl, int retVal);
  E_DLL0 int E_DLL1 PointGauge_getTransitionIndex_INT32(void* impl, int* retVal);
  E_DLL0 int E_DLL1 PointGauge_setTransitionIndex_INT32(void* impl, int retVal);
  E_DLL0 int E_DLL1 PointGauge_getThreshold_INT32(void* impl, int* retVal);
  E_DLL0 int E_DLL1 PointGauge_setThreshold_INT32(void* impl, int retVal);
  E_DLL0 int E_DLL1 PointGauge_getMinAmplitude_INT32(void* impl, int* retVal);
  E_DLL0 int E_DLL1 PointGauge_setMinAmplitude_INT32(void* impl, int retVal);
  E_DLL0 int E_DLL1 PointGauge_getMinArea_INT32(void* impl, int* retVal);
  E_DLL0 int E_DLL1 PointGauge_setMinArea_INT32(void* impl, int retVal);
  E_DLL0 int E_DLL1 PointGauge_getSmoothing_INT32(void* impl, int* retVal);
  E_DLL0 int E_DLL1 PointGauge_setSmoothing_INT32(void* impl, int retVal);
  E_DLL0 int E_DLL1 PointGauge_getThickness_INT32(void* impl, int* retVal);
  E_DLL0 int E_DLL1 PointGauge_setThickness_INT32(void* impl, int retVal);
  E_DLL0 int E_DLL1 PointGauge_Measure_ROIBW8(void* impl, void** sourceImage);
  E_DLL0 int E_DLL1 PointGauge_Process_ROIBW8_BOOL(void* impl, void** sourceImage, int daughters);
  E_DLL0 int E_DLL1 PointGauge_Process_ROIBW8(void* impl, void** sourceImage);
  E_DLL0 int E_DLL1 PointGauge_getActualShape_BOOL(void* impl, int* retVal);
  E_DLL0 int E_DLL1 PointGauge_setActualShape_BOOL(void* impl, int retVal);
  E_DLL0 int E_DLL1 PointGauge_getHVConstraint_BOOL(void* impl, int* retVal);
  E_DLL0 int E_DLL1 PointGauge_setHVConstraint_BOOL(void* impl, int retVal);
  E_DLL0 int E_DLL1 PointGauge_GetMeasuredPoint_INT32_Point(void* impl, int index, void** retVal);
  E_DLL0 int E_DLL1 PointGauge_getValid_BOOL(void* impl, int* retVal);
  E_DLL0 int E_DLL1 PointGauge_GetMeasuredPeak_INT32_Peak(void* impl, int index, void** retVal);
  E_DLL0 int E_DLL1 PointGauge_Draw_DrawAdapter_DrawingMode_BOOL(void* impl, void* context, int drawingMode, int daughters);
  E_DLL0 int E_DLL1 PointGauge_Draw_DrawAdapter_DrawingMode(void* impl, void* context, int drawingMode);
  E_DLL0 int E_DLL1 PointGauge_Draw_DrawAdapter(void* impl, void* context);
  E_DLL0 int E_DLL1 PointGauge_SetCursor_INT32_INT32(void* impl, int x, int y);
  E_DLL0 int E_DLL1 PointGauge_HitTest_BOOL_BOOL(void* impl, int daughters, int* retVal);
  E_DLL0 int E_DLL1 PointGauge_HitTest_BOOL(void* impl, int* retVal);
  E_DLL0 int E_DLL1 PointGauge_getHitHandle_EasyGaugeDragHandle(void* impl, int* retVal);
  E_DLL0 int E_DLL1 PointGauge_getHitShape_Shape(void* impl, void** retVal);
  E_DLL0 int E_DLL1 PointGauge_Drag_INT32_INT32(void* impl, int x, int y);
  E_DLL0 int E_DLL1 PointGauge_Plot_DrawAdapter_EasyGaugePlotItem_FLOAT32_FLOAT32_FLOAT32_FLOAT32(void* impl, void* context, int drawItems, float width, float height, float originX, float originY);
  E_DLL0 int E_DLL1 PointGauge_Plot_DrawAdapter_EasyGaugePlotItem_FLOAT32_FLOAT32_FLOAT32(void* impl, void* context, int drawItems, float width, float height, float originX);
  E_DLL0 int E_DLL1 PointGauge_Plot_DrawAdapter_EasyGaugePlotItem_FLOAT32_FLOAT32(void* impl, void* context, int drawItems, float width, float height);
  E_DLL0 int E_DLL1 PointGauge_getDragable_BOOL(void* impl, int* retVal);
  E_DLL0 int E_DLL1 PointGauge_setDragable_BOOL(void* impl, int retVal);
  E_DLL0 int E_DLL1 PointGauge_getRotatable_BOOL(void* impl, int* retVal);
  E_DLL0 int E_DLL1 PointGauge_setRotatable_BOOL(void* impl, int retVal);
  E_DLL0 int E_DLL1 PointGauge_getResizable_BOOL(void* impl, int* retVal);
  E_DLL0 int E_DLL1 PointGauge_setResizable_BOOL(void* impl, int retVal);
  E_DLL0 int E_DLL1 PointGauge_getDraggingMode_EasyGaugeDraggingMode(void* impl, int* retVal);
  E_DLL0 int E_DLL1 PointGauge_setDraggingMode_EasyGaugeDraggingMode(void* impl, int retVal);
  E_DLL0 int E_DLL1 PointGauge_Save_ConstString_BOOL(void* impl, const char* pathName, int daughters);
  E_DLL0 int E_DLL1 PointGauge_Save_ConstString(void* impl, const char* pathName);
  E_DLL0 int E_DLL1 PointGauge_Load_ConstString_BOOL(void* impl, const char* pathName, int daughters);
  E_DLL0 int E_DLL1 PointGauge_Load_ConstString(void* impl, const char* pathName);
  E_DLL0 int E_DLL1 PointGauge_getType_ShapeType(void* impl, int* retVal);
  E_DLL0 int E_DLL1 PointGauge_Ctor(void** impl, int handle);
  E_DLL0 int E_DLL1 PointGauge_getTolerance_FLOAT32(void* impl, float* retVal);
  E_DLL0 int E_DLL1 PointGauge_SetTolerance_FLOAT32_FLOAT32(void* impl, float tolerance, float angle);
  E_DLL0 int E_DLL1 PointGauge_getToleranceAngle_FLOAT32(void* impl, float* retVal);
  E_DLL0 int E_DLL1 PointGauge_getNumMeasuredPoints_INT32(void* impl, int* retVal);
  E_DLL0 int E_DLL1 PointGauge_getRectangularSamplingArea_BOOL(void* impl, int* retVal);
  E_DLL0 int E_DLL1 PointGauge_setRectangularSamplingArea_BOOL(void* impl, int retVal);
#ifdef EVISION_CLR
  E_DLL0 void E_DLL1  PointGauge_SetCallback(void** impl, [System::Runtime::InteropServices::MarshalAs(System::Runtime::InteropServices::UnmanagedType::FunctionPtr)]System::Delegate* callback, int handle);
#else
E_DLL0 void E_DLL1  PointGauge_SetCallback(void** impl, void* callback, int handle);
#endif //EVISION_CLR
    E_DLL0 void E_DLL1 PointGauge_GetWrapper(int* handle, void* impl);
  E_DLL0 int E_DLL1 PointGauge_Dtor(void* impl);
  E_DLL0 void E_DLL1 ConvertLineGaugeToShape(void** dst, void* src);
  E_DLL0 int E_DLL1 LineGauge_CopyTo_LineGauge_BOOL_LineGauge(void* impl, void** gauge, int recursive, void** retVal);
  E_DLL0 int E_DLL1 LineGauge_SetCenter_FLOAT32_FLOAT32(void* impl, float x, float y);
  E_DLL0 int E_DLL1 LineGauge_getCenter_Point(void* impl, void** retVal);
  E_DLL0 int E_DLL1 LineGauge_setCenter_Point(void* impl, void* retVal);
  E_DLL0 int E_DLL1 LineGauge_getActive_BOOL(void* impl, int* retVal);
  E_DLL0 int E_DLL1 LineGauge_setActive_BOOL(void* impl, int retVal);
  E_DLL0 int E_DLL1 LineGauge_getLabeled_BOOL(void* impl, int* retVal);
  E_DLL0 int E_DLL1 LineGauge_setLabeled_BOOL(void* impl, int retVal);
  E_DLL0 int E_DLL1 LineGauge_getOptionalDraw_BOOL(void* impl, int* retVal);
  E_DLL0 int E_DLL1 LineGauge_setOptionalDraw_BOOL(void* impl, int retVal);
  E_DLL0 int E_DLL1 LineGauge_getQuickDraw_BOOL(void* impl, int* retVal);
  E_DLL0 int E_DLL1 LineGauge_setQuickDraw_BOOL(void* impl, int retVal);
  E_DLL0 int E_DLL1 LineGauge_getTransitionType_EasyGaugeTransitionType(void* impl, int* retVal);
  E_DLL0 int E_DLL1 LineGauge_setTransitionType_EasyGaugeTransitionType(void* impl, int retVal);
  E_DLL0 int E_DLL1 LineGauge_getTransitionChoice_EasyGaugeTransitionChoice(void* impl, int* retVal);
  E_DLL0 int E_DLL1 LineGauge_setTransitionChoice_EasyGaugeTransitionChoice(void* impl, int retVal);
  E_DLL0 int E_DLL1 LineGauge_getTransitionIndex_INT32(void* impl, int* retVal);
  E_DLL0 int E_DLL1 LineGauge_setTransitionIndex_INT32(void* impl, int retVal);
  E_DLL0 int E_DLL1 LineGauge_getThreshold_INT32(void* impl, int* retVal);
  E_DLL0 int E_DLL1 LineGauge_setThreshold_INT32(void* impl, int retVal);
  E_DLL0 int E_DLL1 LineGauge_getMinAmplitude_INT32(void* impl, int* retVal);
  E_DLL0 int E_DLL1 LineGauge_setMinAmplitude_INT32(void* impl, int retVal);
  E_DLL0 int E_DLL1 LineGauge_getMinArea_INT32(void* impl, int* retVal);
  E_DLL0 int E_DLL1 LineGauge_setMinArea_INT32(void* impl, int retVal);
  E_DLL0 int E_DLL1 LineGauge_getSmoothing_INT32(void* impl, int* retVal);
  E_DLL0 int E_DLL1 LineGauge_setSmoothing_INT32(void* impl, int retVal);
  E_DLL0 int E_DLL1 LineGauge_getThickness_INT32(void* impl, int* retVal);
  E_DLL0 int E_DLL1 LineGauge_setThickness_INT32(void* impl, int retVal);
  E_DLL0 int E_DLL1 LineGauge_Measure_ROIBW8(void* impl, void** sourceImage);
  E_DLL0 int E_DLL1 LineGauge_Process_ROIBW8_BOOL(void* impl, void** sourceImage, int daughters);
  E_DLL0 int E_DLL1 LineGauge_Process_ROIBW8(void* impl, void** sourceImage);
  E_DLL0 int E_DLL1 LineGauge_MeasureSample_ROIBW8_INT32(void* impl, void** sourceImage, int pathIndex);
  E_DLL0 int E_DLL1 LineGauge_getActualShape_BOOL(void* impl, int* retVal);
  E_DLL0 int E_DLL1 LineGauge_setActualShape_BOOL(void* impl, int retVal);
  E_DLL0 int E_DLL1 LineGauge_getSamplingStep_FLOAT32(void* impl, float* retVal);
  E_DLL0 int E_DLL1 LineGauge_setSamplingStep_FLOAT32(void* impl, float retVal);
  E_DLL0 int E_DLL1 LineGauge_getFilteringThreshold_FLOAT32(void* impl, float* retVal);
  E_DLL0 int E_DLL1 LineGauge_setFilteringThreshold_FLOAT32(void* impl, float retVal);
  E_DLL0 int E_DLL1 LineGauge_getNumFilteringPasses_INT32(void* impl, int* retVal);
  E_DLL0 int E_DLL1 LineGauge_setNumFilteringPasses_INT32(void* impl, int retVal);
  E_DLL0 int E_DLL1 LineGauge_getHVConstraint_BOOL(void* impl, int* retVal);
  E_DLL0 int E_DLL1 LineGauge_setHVConstraint_BOOL(void* impl, int retVal);
  E_DLL0 int E_DLL1 LineGauge_GetMinNumFitSamples_INT32_INT32_INT32_INT32(void* impl, int* side0, int* side1, int* side2, int* side3);
  E_DLL0 int E_DLL1 LineGauge_SetMinNumFitSamples_INT32_INT32_INT32_INT32(void* impl, int side0, int side1, int side2, int side3);
  E_DLL0 int E_DLL1 LineGauge_SetMinNumFitSamples_INT32_INT32_INT32(void* impl, int side0, int side1, int side2);
  E_DLL0 int E_DLL1 LineGauge_SetMinNumFitSamples_INT32_INT32(void* impl, int side0, int side1);
  E_DLL0 int E_DLL1 LineGauge_SetMinNumFitSamples_INT32(void* impl, int side0);
  E_DLL0 int E_DLL1 LineGauge_AddSkipRange_UINT32_UINT32_UINT32(void* impl, unsigned int start, unsigned int end, unsigned int* retVal);
  E_DLL0 int E_DLL1 LineGauge_getNumSkipRanges_INT32(void* impl, int* retVal);
  E_DLL0 int E_DLL1 LineGauge_GetSkipRange_INT32_UINT32_UINT32(void* impl, int index, unsigned int* start, unsigned int* end);
  E_DLL0 int E_DLL1 LineGauge_RemoveSkipRange_INT32(void* impl, int index);
  E_DLL0 int E_DLL1 LineGauge_RemoveAllSkipRanges(void* impl);
  E_DLL0 int E_DLL1 LineGauge_GetMeasuredPoint_INT32_Point(void* impl, int index, void** retVal);
  E_DLL0 int E_DLL1 LineGauge_getValid_BOOL(void* impl, int* retVal);
  E_DLL0 int E_DLL1 LineGauge_getNumSamples_INT32(void* impl, int* retVal);
  E_DLL0 int E_DLL1 LineGauge_getNumValidSamples_INT32(void* impl, int* retVal);
  E_DLL0 int E_DLL1 LineGauge_getAverageDistance_FLOAT32(void* impl, float* retVal);
  E_DLL0 int E_DLL1 LineGauge_GetMeasuredPeak_INT32_Peak(void* impl, int index, void** retVal);
  E_DLL0 int E_DLL1 LineGauge_Draw_DrawAdapter_DrawingMode_BOOL(void* impl, void* context, int drawingMode, int daughters);
  E_DLL0 int E_DLL1 LineGauge_Draw_DrawAdapter_DrawingMode(void* impl, void* context, int drawingMode);
  E_DLL0 int E_DLL1 LineGauge_Draw_DrawAdapter(void* impl, void* context);
  E_DLL0 int E_DLL1 LineGauge_SetCursor_INT32_INT32(void* impl, int x, int y);
  E_DLL0 int E_DLL1 LineGauge_HitTest_BOOL_BOOL(void* impl, int daughters, int* retVal);
  E_DLL0 int E_DLL1 LineGauge_HitTest_BOOL(void* impl, int* retVal);
  E_DLL0 int E_DLL1 LineGauge_getHitHandle_EasyGaugeDragHandle(void* impl, int* retVal);
  E_DLL0 int E_DLL1 LineGauge_getHitShape_Shape(void* impl, void** retVal);
  E_DLL0 int E_DLL1 LineGauge_Drag_INT32_INT32(void* impl, int x, int y);
  E_DLL0 int E_DLL1 LineGauge_Plot_DrawAdapter_EasyGaugePlotItem_FLOAT32_FLOAT32_FLOAT32_FLOAT32(void* impl, void* context, int drawItems, float width, float height, float originX, float originY);
  E_DLL0 int E_DLL1 LineGauge_Plot_DrawAdapter_EasyGaugePlotItem_FLOAT32_FLOAT32_FLOAT32(void* impl, void* context, int drawItems, float width, float height, float originX);
  E_DLL0 int E_DLL1 LineGauge_Plot_DrawAdapter_EasyGaugePlotItem_FLOAT32_FLOAT32(void* impl, void* context, int drawItems, float width, float height);
  E_DLL0 int E_DLL1 LineGauge_getDragable_BOOL(void* impl, int* retVal);
  E_DLL0 int E_DLL1 LineGauge_setDragable_BOOL(void* impl, int retVal);
  E_DLL0 int E_DLL1 LineGauge_getRotatable_BOOL(void* impl, int* retVal);
  E_DLL0 int E_DLL1 LineGauge_setRotatable_BOOL(void* impl, int retVal);
  E_DLL0 int E_DLL1 LineGauge_getResizable_BOOL(void* impl, int* retVal);
  E_DLL0 int E_DLL1 LineGauge_setResizable_BOOL(void* impl, int retVal);
  E_DLL0 int E_DLL1 LineGauge_getDraggingMode_EasyGaugeDraggingMode(void* impl, int* retVal);
  E_DLL0 int E_DLL1 LineGauge_setDraggingMode_EasyGaugeDraggingMode(void* impl, int retVal);
  E_DLL0 int E_DLL1 LineGauge_Save_ConstString_BOOL(void* impl, const char* pathName, int daughters);
  E_DLL0 int E_DLL1 LineGauge_Save_ConstString(void* impl, const char* pathName);
  E_DLL0 int E_DLL1 LineGauge_Load_ConstString_BOOL(void* impl, const char* pathName, int daughters);
  E_DLL0 int E_DLL1 LineGauge_Load_ConstString(void* impl, const char* pathName);
  E_DLL0 int E_DLL1 LineGauge_getType_ShapeType(void* impl, int* retVal);
  E_DLL0 int E_DLL1 LineGauge_Ctor(void** impl, int handle);
  E_DLL0 int E_DLL1 LineGauge_Set_Line(void* impl, void* line);
  E_DLL0 int E_DLL1 LineGauge_Set_Point_FLOAT32_FLOAT32(void* impl, void* center, float length, float angle);
  E_DLL0 int E_DLL1 LineGauge_Set_Point_FLOAT32(void* impl, void* center, float length);
  E_DLL0 int E_DLL1 LineGauge_Set_Point_Point(void* impl, void* origin, void* end);
  E_DLL0 int E_DLL1 LineGauge_getLength_FLOAT32(void* impl, float* retVal);
  E_DLL0 int E_DLL1 LineGauge_setLength_FLOAT32(void* impl, float retVal);
  E_DLL0 int E_DLL1 LineGauge_getAngle_FLOAT32(void* impl, float* retVal);
  E_DLL0 int E_DLL1 LineGauge_setAngle_FLOAT32(void* impl, float retVal);
  E_DLL0 int E_DLL1 LineGauge_getTolerance_FLOAT32(void* impl, float* retVal);
  E_DLL0 int E_DLL1 LineGauge_setTolerance_FLOAT32(void* impl, float retVal);
  E_DLL0 int E_DLL1 LineGauge_getOrg_Point(void* impl, void** retVal);
  E_DLL0 int E_DLL1 LineGauge_getEnd_Point(void* impl, void** retVal);
  E_DLL0 int E_DLL1 LineGauge_getKnownAngle_BOOL(void* impl, int* retVal);
  E_DLL0 int E_DLL1 LineGauge_setKnownAngle_BOOL(void* impl, int retVal);
  E_DLL0 int E_DLL1 LineGauge_getClippingMode_EasyGaugeClippingMode(void* impl, int* retVal);
  E_DLL0 int E_DLL1 LineGauge_setClippingMode_EasyGaugeClippingMode(void* impl, int retVal);
  E_DLL0 int E_DLL1 LineGauge_getMeasuredLine_Line(void* impl, void** retVal);
  E_DLL0 int E_DLL1 LineGauge_GetPoint_FLOAT32_Point(void* impl, float fraction, void** retVal);
  E_DLL0 int E_DLL1 LineGauge_getRectangularSamplingArea_BOOL(void* impl, int* retVal);
  E_DLL0 int E_DLL1 LineGauge_setRectangularSamplingArea_BOOL(void* impl, int retVal);
#ifdef EVISION_CLR
  E_DLL0 void E_DLL1  LineGauge_SetCallback(void** impl, [System::Runtime::InteropServices::MarshalAs(System::Runtime::InteropServices::UnmanagedType::FunctionPtr)]System::Delegate* callback, int handle);
#else
E_DLL0 void E_DLL1  LineGauge_SetCallback(void** impl, void* callback, int handle);
#endif //EVISION_CLR
    E_DLL0 void E_DLL1 LineGauge_GetWrapper(int* handle, void* impl);
  E_DLL0 int E_DLL1 LineGauge_Dtor(void* impl);
  E_DLL0 void E_DLL1 ConvertCircleGaugeToShape(void** dst, void* src);
  E_DLL0 int E_DLL1 CircleGauge_CopyTo_CircleGauge_BOOL_CircleGauge(void* impl, void** gauge, int recursive, void** retVal);
  E_DLL0 int E_DLL1 CircleGauge_SetCenter_FLOAT32_FLOAT32(void* impl, float x, float y);
  E_DLL0 int E_DLL1 CircleGauge_getCenter_Point(void* impl, void** retVal);
  E_DLL0 int E_DLL1 CircleGauge_setCenter_Point(void* impl, void* retVal);
  E_DLL0 int E_DLL1 CircleGauge_getActive_BOOL(void* impl, int* retVal);
  E_DLL0 int E_DLL1 CircleGauge_setActive_BOOL(void* impl, int retVal);
  E_DLL0 int E_DLL1 CircleGauge_getLabeled_BOOL(void* impl, int* retVal);
  E_DLL0 int E_DLL1 CircleGauge_setLabeled_BOOL(void* impl, int retVal);
  E_DLL0 int E_DLL1 CircleGauge_getOptionalDraw_BOOL(void* impl, int* retVal);
  E_DLL0 int E_DLL1 CircleGauge_setOptionalDraw_BOOL(void* impl, int retVal);
  E_DLL0 int E_DLL1 CircleGauge_getQuickDraw_BOOL(void* impl, int* retVal);
  E_DLL0 int E_DLL1 CircleGauge_setQuickDraw_BOOL(void* impl, int retVal);
  E_DLL0 int E_DLL1 CircleGauge_getTransitionType_EasyGaugeTransitionType(void* impl, int* retVal);
  E_DLL0 int E_DLL1 CircleGauge_setTransitionType_EasyGaugeTransitionType(void* impl, int retVal);
  E_DLL0 int E_DLL1 CircleGauge_getTransitionChoice_EasyGaugeTransitionChoice(void* impl, int* retVal);
  E_DLL0 int E_DLL1 CircleGauge_setTransitionChoice_EasyGaugeTransitionChoice(void* impl, int retVal);
  E_DLL0 int E_DLL1 CircleGauge_getTransitionIndex_INT32(void* impl, int* retVal);
  E_DLL0 int E_DLL1 CircleGauge_setTransitionIndex_INT32(void* impl, int retVal);
  E_DLL0 int E_DLL1 CircleGauge_getThreshold_INT32(void* impl, int* retVal);
  E_DLL0 int E_DLL1 CircleGauge_setThreshold_INT32(void* impl, int retVal);
  E_DLL0 int E_DLL1 CircleGauge_getMinAmplitude_INT32(void* impl, int* retVal);
  E_DLL0 int E_DLL1 CircleGauge_setMinAmplitude_INT32(void* impl, int retVal);
  E_DLL0 int E_DLL1 CircleGauge_getMinArea_INT32(void* impl, int* retVal);
  E_DLL0 int E_DLL1 CircleGauge_setMinArea_INT32(void* impl, int retVal);
  E_DLL0 int E_DLL1 CircleGauge_getSmoothing_INT32(void* impl, int* retVal);
  E_DLL0 int E_DLL1 CircleGauge_setSmoothing_INT32(void* impl, int retVal);
  E_DLL0 int E_DLL1 CircleGauge_getThickness_INT32(void* impl, int* retVal);
  E_DLL0 int E_DLL1 CircleGauge_setThickness_INT32(void* impl, int retVal);
  E_DLL0 int E_DLL1 CircleGauge_Measure_ROIBW8(void* impl, void** sourceImage);
  E_DLL0 int E_DLL1 CircleGauge_Process_ROIBW8_BOOL(void* impl, void** sourceImage, int daughters);
  E_DLL0 int E_DLL1 CircleGauge_Process_ROIBW8(void* impl, void** sourceImage);
  E_DLL0 int E_DLL1 CircleGauge_MeasureSample_ROIBW8_INT32(void* impl, void** sourceImage, int pathIndex);
  E_DLL0 int E_DLL1 CircleGauge_getActualShape_BOOL(void* impl, int* retVal);
  E_DLL0 int E_DLL1 CircleGauge_setActualShape_BOOL(void* impl, int retVal);
  E_DLL0 int E_DLL1 CircleGauge_getSamplingStep_FLOAT32(void* impl, float* retVal);
  E_DLL0 int E_DLL1 CircleGauge_setSamplingStep_FLOAT32(void* impl, float retVal);
  E_DLL0 int E_DLL1 CircleGauge_getFilteringThreshold_FLOAT32(void* impl, float* retVal);
  E_DLL0 int E_DLL1 CircleGauge_setFilteringThreshold_FLOAT32(void* impl, float retVal);
  E_DLL0 int E_DLL1 CircleGauge_getNumFilteringPasses_INT32(void* impl, int* retVal);
  E_DLL0 int E_DLL1 CircleGauge_setNumFilteringPasses_INT32(void* impl, int retVal);
  E_DLL0 int E_DLL1 CircleGauge_getHVConstraint_BOOL(void* impl, int* retVal);
  E_DLL0 int E_DLL1 CircleGauge_setHVConstraint_BOOL(void* impl, int retVal);
  E_DLL0 int E_DLL1 CircleGauge_GetMinNumFitSamples_INT32_INT32_INT32_INT32(void* impl, int* side0, int* side1, int* side2, int* side3);
  E_DLL0 int E_DLL1 CircleGauge_SetMinNumFitSamples_INT32_INT32_INT32_INT32(void* impl, int side0, int side1, int side2, int side3);
  E_DLL0 int E_DLL1 CircleGauge_SetMinNumFitSamples_INT32_INT32_INT32(void* impl, int side0, int side1, int side2);
  E_DLL0 int E_DLL1 CircleGauge_SetMinNumFitSamples_INT32_INT32(void* impl, int side0, int side1);
  E_DLL0 int E_DLL1 CircleGauge_SetMinNumFitSamples_INT32(void* impl, int side0);
  E_DLL0 int E_DLL1 CircleGauge_AddSkipRange_UINT32_UINT32_UINT32(void* impl, unsigned int start, unsigned int end, unsigned int* retVal);
  E_DLL0 int E_DLL1 CircleGauge_getNumSkipRanges_INT32(void* impl, int* retVal);
  E_DLL0 int E_DLL1 CircleGauge_GetSkipRange_INT32_UINT32_UINT32(void* impl, int index, unsigned int* start, unsigned int* end);
  E_DLL0 int E_DLL1 CircleGauge_RemoveSkipRange_INT32(void* impl, int index);
  E_DLL0 int E_DLL1 CircleGauge_RemoveAllSkipRanges(void* impl);
  E_DLL0 int E_DLL1 CircleGauge_GetMeasuredPoint_INT32_Point(void* impl, int index, void** retVal);
  E_DLL0 int E_DLL1 CircleGauge_getValid_BOOL(void* impl, int* retVal);
  E_DLL0 int E_DLL1 CircleGauge_getNumSamples_INT32(void* impl, int* retVal);
  E_DLL0 int E_DLL1 CircleGauge_getNumValidSamples_INT32(void* impl, int* retVal);
  E_DLL0 int E_DLL1 CircleGauge_getAverageDistance_FLOAT32(void* impl, float* retVal);
  E_DLL0 int E_DLL1 CircleGauge_GetMeasuredPeak_INT32_Peak(void* impl, int index, void** retVal);
  E_DLL0 int E_DLL1 CircleGauge_Draw_DrawAdapter_DrawingMode_BOOL(void* impl, void* context, int drawingMode, int daughters);
  E_DLL0 int E_DLL1 CircleGauge_Draw_DrawAdapter_DrawingMode(void* impl, void* context, int drawingMode);
  E_DLL0 int E_DLL1 CircleGauge_Draw_DrawAdapter(void* impl, void* context);
  E_DLL0 int E_DLL1 CircleGauge_SetCursor_INT32_INT32(void* impl, int x, int y);
  E_DLL0 int E_DLL1 CircleGauge_HitTest_BOOL_BOOL(void* impl, int daughters, int* retVal);
  E_DLL0 int E_DLL1 CircleGauge_HitTest_BOOL(void* impl, int* retVal);
  E_DLL0 int E_DLL1 CircleGauge_getHitHandle_EasyGaugeDragHandle(void* impl, int* retVal);
  E_DLL0 int E_DLL1 CircleGauge_getHitShape_Shape(void* impl, void** retVal);
  E_DLL0 int E_DLL1 CircleGauge_Drag_INT32_INT32(void* impl, int x, int y);
  E_DLL0 int E_DLL1 CircleGauge_Plot_DrawAdapter_EasyGaugePlotItem_FLOAT32_FLOAT32_FLOAT32_FLOAT32(void* impl, void* context, int drawItems, float width, float height, float originX, float originY);
  E_DLL0 int E_DLL1 CircleGauge_Plot_DrawAdapter_EasyGaugePlotItem_FLOAT32_FLOAT32_FLOAT32(void* impl, void* context, int drawItems, float width, float height, float originX);
  E_DLL0 int E_DLL1 CircleGauge_Plot_DrawAdapter_EasyGaugePlotItem_FLOAT32_FLOAT32(void* impl, void* context, int drawItems, float width, float height);
  E_DLL0 int E_DLL1 CircleGauge_getDragable_BOOL(void* impl, int* retVal);
  E_DLL0 int E_DLL1 CircleGauge_setDragable_BOOL(void* impl, int retVal);
  E_DLL0 int E_DLL1 CircleGauge_getRotatable_BOOL(void* impl, int* retVal);
  E_DLL0 int E_DLL1 CircleGauge_setRotatable_BOOL(void* impl, int retVal);
  E_DLL0 int E_DLL1 CircleGauge_getResizable_BOOL(void* impl, int* retVal);
  E_DLL0 int E_DLL1 CircleGauge_setResizable_BOOL(void* impl, int retVal);
  E_DLL0 int E_DLL1 CircleGauge_getDraggingMode_EasyGaugeDraggingMode(void* impl, int* retVal);
  E_DLL0 int E_DLL1 CircleGauge_setDraggingMode_EasyGaugeDraggingMode(void* impl, int retVal);
  E_DLL0 int E_DLL1 CircleGauge_Save_ConstString_BOOL(void* impl, const char* pathName, int daughters);
  E_DLL0 int E_DLL1 CircleGauge_Save_ConstString(void* impl, const char* pathName);
  E_DLL0 int E_DLL1 CircleGauge_Load_ConstString_BOOL(void* impl, const char* pathName, int daughters);
  E_DLL0 int E_DLL1 CircleGauge_Load_ConstString(void* impl, const char* pathName);
  E_DLL0 int E_DLL1 CircleGauge_getType_ShapeType(void* impl, int* retVal);
  E_DLL0 int E_DLL1 CircleGauge_Ctor(void** impl, int handle);
  E_DLL0 int E_DLL1 CircleGauge_Set_Circle(void* impl, void* circle);
  E_DLL0 int E_DLL1 CircleGauge_Set_Point_FLOAT32_FLOAT32_BOOL(void* impl, void* center, float diameter, float originAngle, int direct);
  E_DLL0 int E_DLL1 CircleGauge_Set_Point_FLOAT32_FLOAT32(void* impl, void* center, float diameter, float originAngle);
  E_DLL0 int E_DLL1 CircleGauge_Set_Point_FLOAT32_FLOAT32_FLOAT32(void* impl, void* center, float diameter, float originAngle, float amplitude);
  E_DLL0 int E_DLL1 CircleGauge_Set_Point_Point_BOOL(void* impl, void* center, void* origin, int direct);
  E_DLL0 int E_DLL1 CircleGauge_Set_Point_Point(void* impl, void* center, void* origin);
  E_DLL0 int E_DLL1 CircleGauge_Set_Point_Point_Point_BOOL(void* impl, void* origin, void* middle, void* end, int fullTurn);
  E_DLL0 int E_DLL1 CircleGauge_Set_Point_Point_Point(void* impl, void* origin, void* middle, void* end);
  E_DLL0 int E_DLL1 CircleGauge_getRadius_FLOAT32(void* impl, float* retVal);
  E_DLL0 int E_DLL1 CircleGauge_setRadius_FLOAT32(void* impl, float retVal);
  E_DLL0 int E_DLL1 CircleGauge_getDiameter_FLOAT32(void* impl, float* retVal);
  E_DLL0 int E_DLL1 CircleGauge_setDiameter_FLOAT32(void* impl, float retVal);
  E_DLL0 int E_DLL1 CircleGauge_getArcLength_FLOAT32(void* impl, float* retVal);
  E_DLL0 int E_DLL1 CircleGauge_getOrgAngle_FLOAT32(void* impl, float* retVal);
  E_DLL0 int E_DLL1 CircleGauge_getApexAngle_FLOAT32(void* impl, float* retVal);
  E_DLL0 int E_DLL1 CircleGauge_getEndAngle_FLOAT32(void* impl, float* retVal);
  E_DLL0 int E_DLL1 CircleGauge_getAmplitude_FLOAT32(void* impl, float* retVal);
  E_DLL0 int E_DLL1 CircleGauge_getOrg_Point(void* impl, void** retVal);
  E_DLL0 int E_DLL1 CircleGauge_getApex_Point(void* impl, void** retVal);
  E_DLL0 int E_DLL1 CircleGauge_getEnd_Point(void* impl, void** retVal);
  E_DLL0 int E_DLL1 CircleGauge_getFull_BOOL(void* impl, int* retVal);
  E_DLL0 int E_DLL1 CircleGauge_getDirect_BOOL(void* impl, int* retVal);
  E_DLL0 int E_DLL1 CircleGauge_getTolerance_FLOAT32(void* impl, float* retVal);
  E_DLL0 int E_DLL1 CircleGauge_setTolerance_FLOAT32(void* impl, float retVal);
  E_DLL0 int E_DLL1 CircleGauge_getMeasuredCircle_Circle(void* impl, void** retVal);
  E_DLL0 int E_DLL1 CircleGauge_GetPoint_FLOAT32_Point(void* impl, float fraction, void** retVal);
  E_DLL0 int E_DLL1 CircleGauge_getRectangularSamplingArea_BOOL(void* impl, int* retVal);
  E_DLL0 int E_DLL1 CircleGauge_setRectangularSamplingArea_BOOL(void* impl, int retVal);
#ifdef EVISION_CLR
  E_DLL0 void E_DLL1  CircleGauge_SetCallback(void** impl, [System::Runtime::InteropServices::MarshalAs(System::Runtime::InteropServices::UnmanagedType::FunctionPtr)]System::Delegate* callback, int handle);
#else
E_DLL0 void E_DLL1  CircleGauge_SetCallback(void** impl, void* callback, int handle);
#endif //EVISION_CLR
    E_DLL0 void E_DLL1 CircleGauge_GetWrapper(int* handle, void* impl);
  E_DLL0 int E_DLL1 CircleGauge_Dtor(void* impl);
  E_DLL0 void E_DLL1 ConvertRectangleGaugeToShape(void** dst, void* src);
  E_DLL0 int E_DLL1 RectangleGauge_CopyTo_RectangleGauge_BOOL_RectangleGauge(void* impl, void** gauge, int recursive, void** retVal);
  E_DLL0 int E_DLL1 RectangleGauge_SetCenter_FLOAT32_FLOAT32(void* impl, float x, float y);
  E_DLL0 int E_DLL1 RectangleGauge_getCenter_Point(void* impl, void** retVal);
  E_DLL0 int E_DLL1 RectangleGauge_setCenter_Point(void* impl, void* retVal);
  E_DLL0 int E_DLL1 RectangleGauge_getActive_BOOL(void* impl, int* retVal);
  E_DLL0 int E_DLL1 RectangleGauge_setActive_BOOL(void* impl, int retVal);
  E_DLL0 int E_DLL1 RectangleGauge_getLabeled_BOOL(void* impl, int* retVal);
  E_DLL0 int E_DLL1 RectangleGauge_setLabeled_BOOL(void* impl, int retVal);
  E_DLL0 int E_DLL1 RectangleGauge_getOptionalDraw_BOOL(void* impl, int* retVal);
  E_DLL0 int E_DLL1 RectangleGauge_setOptionalDraw_BOOL(void* impl, int retVal);
  E_DLL0 int E_DLL1 RectangleGauge_getQuickDraw_BOOL(void* impl, int* retVal);
  E_DLL0 int E_DLL1 RectangleGauge_setQuickDraw_BOOL(void* impl, int retVal);
  E_DLL0 int E_DLL1 RectangleGauge_getTransitionType_EasyGaugeTransitionType(void* impl, int* retVal);
  E_DLL0 int E_DLL1 RectangleGauge_setTransitionType_EasyGaugeTransitionType(void* impl, int retVal);
  E_DLL0 int E_DLL1 RectangleGauge_getTransitionChoice_EasyGaugeTransitionChoice(void* impl, int* retVal);
  E_DLL0 int E_DLL1 RectangleGauge_setTransitionChoice_EasyGaugeTransitionChoice(void* impl, int retVal);
  E_DLL0 int E_DLL1 RectangleGauge_getTransitionIndex_INT32(void* impl, int* retVal);
  E_DLL0 int E_DLL1 RectangleGauge_setTransitionIndex_INT32(void* impl, int retVal);
  E_DLL0 int E_DLL1 RectangleGauge_getThreshold_INT32(void* impl, int* retVal);
  E_DLL0 int E_DLL1 RectangleGauge_setThreshold_INT32(void* impl, int retVal);
  E_DLL0 int E_DLL1 RectangleGauge_getMinAmplitude_INT32(void* impl, int* retVal);
  E_DLL0 int E_DLL1 RectangleGauge_setMinAmplitude_INT32(void* impl, int retVal);
  E_DLL0 int E_DLL1 RectangleGauge_getMinArea_INT32(void* impl, int* retVal);
  E_DLL0 int E_DLL1 RectangleGauge_setMinArea_INT32(void* impl, int retVal);
  E_DLL0 int E_DLL1 RectangleGauge_getSmoothing_INT32(void* impl, int* retVal);
  E_DLL0 int E_DLL1 RectangleGauge_setSmoothing_INT32(void* impl, int retVal);
  E_DLL0 int E_DLL1 RectangleGauge_getThickness_INT32(void* impl, int* retVal);
  E_DLL0 int E_DLL1 RectangleGauge_setThickness_INT32(void* impl, int retVal);
  E_DLL0 int E_DLL1 RectangleGauge_Measure_ROIBW8(void* impl, void** sourceImage);
  E_DLL0 int E_DLL1 RectangleGauge_Process_ROIBW8_BOOL(void* impl, void** sourceImage, int daughters);
  E_DLL0 int E_DLL1 RectangleGauge_Process_ROIBW8(void* impl, void** sourceImage);
  E_DLL0 int E_DLL1 RectangleGauge_MeasureSample_ROIBW8_INT32(void* impl, void** sourceImage, int pathIndex);
  E_DLL0 int E_DLL1 RectangleGauge_getActualShape_BOOL(void* impl, int* retVal);
  E_DLL0 int E_DLL1 RectangleGauge_setActualShape_BOOL(void* impl, int retVal);
  E_DLL0 int E_DLL1 RectangleGauge_getSamplingStep_FLOAT32(void* impl, float* retVal);
  E_DLL0 int E_DLL1 RectangleGauge_setSamplingStep_FLOAT32(void* impl, float retVal);
  E_DLL0 int E_DLL1 RectangleGauge_getFilteringThreshold_FLOAT32(void* impl, float* retVal);
  E_DLL0 int E_DLL1 RectangleGauge_setFilteringThreshold_FLOAT32(void* impl, float retVal);
  E_DLL0 int E_DLL1 RectangleGauge_getNumFilteringPasses_INT32(void* impl, int* retVal);
  E_DLL0 int E_DLL1 RectangleGauge_setNumFilteringPasses_INT32(void* impl, int retVal);
  E_DLL0 int E_DLL1 RectangleGauge_getHVConstraint_BOOL(void* impl, int* retVal);
  E_DLL0 int E_DLL1 RectangleGauge_setHVConstraint_BOOL(void* impl, int retVal);
  E_DLL0 int E_DLL1 RectangleGauge_GetMinNumFitSamples_INT32_INT32_INT32_INT32(void* impl, int* side0, int* side1, int* side2, int* side3);
  E_DLL0 int E_DLL1 RectangleGauge_SetMinNumFitSamples_INT32_INT32_INT32_INT32(void* impl, int side0, int side1, int side2, int side3);
  E_DLL0 int E_DLL1 RectangleGauge_SetMinNumFitSamples_INT32_INT32_INT32(void* impl, int side0, int side1, int side2);
  E_DLL0 int E_DLL1 RectangleGauge_SetMinNumFitSamples_INT32_INT32(void* impl, int side0, int side1);
  E_DLL0 int E_DLL1 RectangleGauge_SetMinNumFitSamples_INT32(void* impl, int side0);
  E_DLL0 int E_DLL1 RectangleGauge_AddSkipRange_UINT32_UINT32_UINT32(void* impl, unsigned int start, unsigned int end, unsigned int* retVal);
  E_DLL0 int E_DLL1 RectangleGauge_getNumSkipRanges_INT32(void* impl, int* retVal);
  E_DLL0 int E_DLL1 RectangleGauge_GetSkipRange_INT32_UINT32_UINT32(void* impl, int index, unsigned int* start, unsigned int* end);
  E_DLL0 int E_DLL1 RectangleGauge_RemoveSkipRange_INT32(void* impl, int index);
  E_DLL0 int E_DLL1 RectangleGauge_RemoveAllSkipRanges(void* impl);
  E_DLL0 int E_DLL1 RectangleGauge_GetMeasuredPoint_INT32_Point(void* impl, int index, void** retVal);
  E_DLL0 int E_DLL1 RectangleGauge_getValid_BOOL(void* impl, int* retVal);
  E_DLL0 int E_DLL1 RectangleGauge_getNumSamples_INT32(void* impl, int* retVal);
  E_DLL0 int E_DLL1 RectangleGauge_getNumValidSamples_INT32(void* impl, int* retVal);
  E_DLL0 int E_DLL1 RectangleGauge_getAverageDistance_FLOAT32(void* impl, float* retVal);
  E_DLL0 int E_DLL1 RectangleGauge_Draw_DrawAdapter_DrawingMode_BOOL(void* impl, void* context, int drawingMode, int daughters);
  E_DLL0 int E_DLL1 RectangleGauge_Draw_DrawAdapter_DrawingMode(void* impl, void* context, int drawingMode);
  E_DLL0 int E_DLL1 RectangleGauge_Draw_DrawAdapter(void* impl, void* context);
  E_DLL0 int E_DLL1 RectangleGauge_SetCursor_INT32_INT32(void* impl, int x, int y);
  E_DLL0 int E_DLL1 RectangleGauge_HitTest_BOOL_BOOL(void* impl, int daughters, int* retVal);
  E_DLL0 int E_DLL1 RectangleGauge_HitTest_BOOL(void* impl, int* retVal);
  E_DLL0 int E_DLL1 RectangleGauge_getHitHandle_EasyGaugeDragHandle(void* impl, int* retVal);
  E_DLL0 int E_DLL1 RectangleGauge_getHitShape_Shape(void* impl, void** retVal);
  E_DLL0 int E_DLL1 RectangleGauge_Drag_INT32_INT32(void* impl, int x, int y);
  E_DLL0 int E_DLL1 RectangleGauge_Plot_DrawAdapter_EasyGaugePlotItem_FLOAT32_FLOAT32_FLOAT32_FLOAT32(void* impl, void* context, int drawItems, float width, float height, float originX, float originY);
  E_DLL0 int E_DLL1 RectangleGauge_Plot_DrawAdapter_EasyGaugePlotItem_FLOAT32_FLOAT32_FLOAT32(void* impl, void* context, int drawItems, float width, float height, float originX);
  E_DLL0 int E_DLL1 RectangleGauge_Plot_DrawAdapter_EasyGaugePlotItem_FLOAT32_FLOAT32(void* impl, void* context, int drawItems, float width, float height);
  E_DLL0 int E_DLL1 RectangleGauge_getDragable_BOOL(void* impl, int* retVal);
  E_DLL0 int E_DLL1 RectangleGauge_setDragable_BOOL(void* impl, int retVal);
  E_DLL0 int E_DLL1 RectangleGauge_getRotatable_BOOL(void* impl, int* retVal);
  E_DLL0 int E_DLL1 RectangleGauge_setRotatable_BOOL(void* impl, int retVal);
  E_DLL0 int E_DLL1 RectangleGauge_getResizable_BOOL(void* impl, int* retVal);
  E_DLL0 int E_DLL1 RectangleGauge_setResizable_BOOL(void* impl, int retVal);
  E_DLL0 int E_DLL1 RectangleGauge_getDraggingMode_EasyGaugeDraggingMode(void* impl, int* retVal);
  E_DLL0 int E_DLL1 RectangleGauge_setDraggingMode_EasyGaugeDraggingMode(void* impl, int retVal);
  E_DLL0 int E_DLL1 RectangleGauge_Save_ConstString_BOOL(void* impl, const char* pathName, int daughters);
  E_DLL0 int E_DLL1 RectangleGauge_Save_ConstString(void* impl, const char* pathName);
  E_DLL0 int E_DLL1 RectangleGauge_Load_ConstString_BOOL(void* impl, const char* pathName, int daughters);
  E_DLL0 int E_DLL1 RectangleGauge_Load_ConstString(void* impl, const char* pathName);
  E_DLL0 int E_DLL1 RectangleGauge_getType_ShapeType(void* impl, int* retVal);
  E_DLL0 int E_DLL1 RectangleGauge_Ctor(void** impl, int handle);
  E_DLL0 int E_DLL1 RectangleGauge_Set_Rectangle(void* impl, void* rectangle);
  E_DLL0 int E_DLL1 RectangleGauge_SetSize_FLOAT32_FLOAT32(void* impl, float sizeX, float sizeY);
  E_DLL0 int E_DLL1 RectangleGauge_GetSizeX_FLOAT32(void* impl, float* retVal);
  E_DLL0 int E_DLL1 RectangleGauge_GetSizeY_FLOAT32(void* impl, float* retVal);
  E_DLL0 int E_DLL1 RectangleGauge_GetMidEdges_Point_Point_Point_Point(void* impl, void** x, void** X, void** y, void** Y);
  E_DLL0 int E_DLL1 RectangleGauge_GetCorners_Point_Point_Point_Point(void* impl, void** xy, void** Xy, void** xY, void** XY);
  E_DLL0 int E_DLL1 RectangleGauge_GetEdges_Line_Line_Line_Line(void* impl, void** x, void** X, void** y, void** Y);
  E_DLL0 int E_DLL1 RectangleGauge_getAngle_FLOAT32(void* impl, float* retVal);
  E_DLL0 int E_DLL1 RectangleGauge_setAngle_FLOAT32(void* impl, float retVal);
  E_DLL0 int E_DLL1 RectangleGauge_getTolerance_FLOAT32(void* impl, float* retVal);
  E_DLL0 int E_DLL1 RectangleGauge_setTolerance_FLOAT32(void* impl, float retVal);
  E_DLL0 int E_DLL1 RectangleGauge_getKnownAngle_BOOL(void* impl, int* retVal);
  E_DLL0 int E_DLL1 RectangleGauge_setKnownAngle_BOOL(void* impl, int retVal);
  E_DLL0 int E_DLL1 RectangleGauge_getActiveEdges_INT32(void* impl, int* retVal);
  E_DLL0 int E_DLL1 RectangleGauge_setActiveEdges_INT32(void* impl, int retVal);
  E_DLL0 int E_DLL1 RectangleGauge_getMeasuredRectangle_Rectangle(void* impl, void** retVal);
  E_DLL0 int E_DLL1 RectangleGauge_GetPoint_FLOAT32_FLOAT32_Point(void* impl, float fractionX, float fractionY, void** retVal);
  E_DLL0 int E_DLL1 RectangleGauge_Set_Point_FLOAT32_FLOAT32_FLOAT32(void* impl, void* center, float sizeX, float sizeY, float angle);
  E_DLL0 int E_DLL1 RectangleGauge_Set_Point_Point(void* impl, void* origin, void* end);
  E_DLL0 int E_DLL1 RectangleGauge_Set_Point_Point_Point(void* impl, void* origin, void* middle, void* end);
  E_DLL0 int E_DLL1 RectangleGauge_getRectangularSamplingArea_BOOL(void* impl, int* retVal);
  E_DLL0 int E_DLL1 RectangleGauge_setRectangularSamplingArea_BOOL(void* impl, int retVal);
#ifdef EVISION_CLR
  E_DLL0 void E_DLL1  RectangleGauge_SetCallback(void** impl, [System::Runtime::InteropServices::MarshalAs(System::Runtime::InteropServices::UnmanagedType::FunctionPtr)]System::Delegate* callback, int handle);
#else
E_DLL0 void E_DLL1  RectangleGauge_SetCallback(void** impl, void* callback, int handle);
#endif //EVISION_CLR
    E_DLL0 void E_DLL1 RectangleGauge_GetWrapper(int* handle, void* impl);
  E_DLL0 int E_DLL1 RectangleGauge_Dtor(void* impl);
  E_DLL0 void E_DLL1 ConvertWedgeGaugeToShape(void** dst, void* src);
  E_DLL0 int E_DLL1 WedgeGauge_CopyTo_WedgeGauge_BOOL_WedgeGauge(void* impl, void** gauge, int recursive, void** retVal);
  E_DLL0 int E_DLL1 WedgeGauge_SetCenter_FLOAT32_FLOAT32(void* impl, float x, float y);
  E_DLL0 int E_DLL1 WedgeGauge_getCenter_Point(void* impl, void** retVal);
  E_DLL0 int E_DLL1 WedgeGauge_setCenter_Point(void* impl, void* retVal);
  E_DLL0 int E_DLL1 WedgeGauge_getActive_BOOL(void* impl, int* retVal);
  E_DLL0 int E_DLL1 WedgeGauge_setActive_BOOL(void* impl, int retVal);
  E_DLL0 int E_DLL1 WedgeGauge_getLabeled_BOOL(void* impl, int* retVal);
  E_DLL0 int E_DLL1 WedgeGauge_setLabeled_BOOL(void* impl, int retVal);
  E_DLL0 int E_DLL1 WedgeGauge_getOptionalDraw_BOOL(void* impl, int* retVal);
  E_DLL0 int E_DLL1 WedgeGauge_setOptionalDraw_BOOL(void* impl, int retVal);
  E_DLL0 int E_DLL1 WedgeGauge_getQuickDraw_BOOL(void* impl, int* retVal);
  E_DLL0 int E_DLL1 WedgeGauge_setQuickDraw_BOOL(void* impl, int retVal);
  E_DLL0 int E_DLL1 WedgeGauge_getTransitionType_EasyGaugeTransitionType(void* impl, int* retVal);
  E_DLL0 int E_DLL1 WedgeGauge_setTransitionType_EasyGaugeTransitionType(void* impl, int retVal);
  E_DLL0 int E_DLL1 WedgeGauge_getTransitionChoice_EasyGaugeTransitionChoice(void* impl, int* retVal);
  E_DLL0 int E_DLL1 WedgeGauge_setTransitionChoice_EasyGaugeTransitionChoice(void* impl, int retVal);
  E_DLL0 int E_DLL1 WedgeGauge_getTransitionIndex_INT32(void* impl, int* retVal);
  E_DLL0 int E_DLL1 WedgeGauge_setTransitionIndex_INT32(void* impl, int retVal);
  E_DLL0 int E_DLL1 WedgeGauge_getThreshold_INT32(void* impl, int* retVal);
  E_DLL0 int E_DLL1 WedgeGauge_setThreshold_INT32(void* impl, int retVal);
  E_DLL0 int E_DLL1 WedgeGauge_getMinAmplitude_INT32(void* impl, int* retVal);
  E_DLL0 int E_DLL1 WedgeGauge_setMinAmplitude_INT32(void* impl, int retVal);
  E_DLL0 int E_DLL1 WedgeGauge_getMinArea_INT32(void* impl, int* retVal);
  E_DLL0 int E_DLL1 WedgeGauge_setMinArea_INT32(void* impl, int retVal);
  E_DLL0 int E_DLL1 WedgeGauge_getSmoothing_INT32(void* impl, int* retVal);
  E_DLL0 int E_DLL1 WedgeGauge_setSmoothing_INT32(void* impl, int retVal);
  E_DLL0 int E_DLL1 WedgeGauge_getThickness_INT32(void* impl, int* retVal);
  E_DLL0 int E_DLL1 WedgeGauge_setThickness_INT32(void* impl, int retVal);
  E_DLL0 int E_DLL1 WedgeGauge_Measure_ROIBW8(void* impl, void** sourceImage);
  E_DLL0 int E_DLL1 WedgeGauge_Process_ROIBW8_BOOL(void* impl, void** sourceImage, int daughters);
  E_DLL0 int E_DLL1 WedgeGauge_Process_ROIBW8(void* impl, void** sourceImage);
  E_DLL0 int E_DLL1 WedgeGauge_MeasureSample_ROIBW8_INT32(void* impl, void** sourceImage, int pathIndex);
  E_DLL0 int E_DLL1 WedgeGauge_getActualShape_BOOL(void* impl, int* retVal);
  E_DLL0 int E_DLL1 WedgeGauge_setActualShape_BOOL(void* impl, int retVal);
  E_DLL0 int E_DLL1 WedgeGauge_getSamplingStep_FLOAT32(void* impl, float* retVal);
  E_DLL0 int E_DLL1 WedgeGauge_setSamplingStep_FLOAT32(void* impl, float retVal);
  E_DLL0 int E_DLL1 WedgeGauge_getFilteringThreshold_FLOAT32(void* impl, float* retVal);
  E_DLL0 int E_DLL1 WedgeGauge_setFilteringThreshold_FLOAT32(void* impl, float retVal);
  E_DLL0 int E_DLL1 WedgeGauge_getNumFilteringPasses_INT32(void* impl, int* retVal);
  E_DLL0 int E_DLL1 WedgeGauge_setNumFilteringPasses_INT32(void* impl, int retVal);
  E_DLL0 int E_DLL1 WedgeGauge_getHVConstraint_BOOL(void* impl, int* retVal);
  E_DLL0 int E_DLL1 WedgeGauge_setHVConstraint_BOOL(void* impl, int retVal);
  E_DLL0 int E_DLL1 WedgeGauge_GetMinNumFitSamples_INT32_INT32_INT32_INT32(void* impl, int* side0, int* side1, int* side2, int* side3);
  E_DLL0 int E_DLL1 WedgeGauge_SetMinNumFitSamples_INT32_INT32_INT32_INT32(void* impl, int side0, int side1, int side2, int side3);
  E_DLL0 int E_DLL1 WedgeGauge_SetMinNumFitSamples_INT32_INT32_INT32(void* impl, int side0, int side1, int side2);
  E_DLL0 int E_DLL1 WedgeGauge_SetMinNumFitSamples_INT32_INT32(void* impl, int side0, int side1);
  E_DLL0 int E_DLL1 WedgeGauge_SetMinNumFitSamples_INT32(void* impl, int side0);
  E_DLL0 int E_DLL1 WedgeGauge_AddSkipRange_UINT32_UINT32_UINT32(void* impl, unsigned int start, unsigned int end, unsigned int* retVal);
  E_DLL0 int E_DLL1 WedgeGauge_getNumSkipRanges_INT32(void* impl, int* retVal);
  E_DLL0 int E_DLL1 WedgeGauge_GetSkipRange_INT32_UINT32_UINT32(void* impl, int index, unsigned int* start, unsigned int* end);
  E_DLL0 int E_DLL1 WedgeGauge_RemoveSkipRange_INT32(void* impl, int index);
  E_DLL0 int E_DLL1 WedgeGauge_RemoveAllSkipRanges(void* impl);
  E_DLL0 int E_DLL1 WedgeGauge_GetMeasuredPoint_INT32_Point(void* impl, int index, void** retVal);
  E_DLL0 int E_DLL1 WedgeGauge_getValid_BOOL(void* impl, int* retVal);
  E_DLL0 int E_DLL1 WedgeGauge_getNumSamples_INT32(void* impl, int* retVal);
  E_DLL0 int E_DLL1 WedgeGauge_getNumValidSamples_INT32(void* impl, int* retVal);
  E_DLL0 int E_DLL1 WedgeGauge_getAverageDistance_FLOAT32(void* impl, float* retVal);
  E_DLL0 int E_DLL1 WedgeGauge_Draw_DrawAdapter_DrawingMode_BOOL(void* impl, void* context, int drawingMode, int daughters);
  E_DLL0 int E_DLL1 WedgeGauge_Draw_DrawAdapter_DrawingMode(void* impl, void* context, int drawingMode);
  E_DLL0 int E_DLL1 WedgeGauge_Draw_DrawAdapter(void* impl, void* context);
  E_DLL0 int E_DLL1 WedgeGauge_SetCursor_INT32_INT32(void* impl, int x, int y);
  E_DLL0 int E_DLL1 WedgeGauge_HitTest_BOOL_BOOL(void* impl, int daughters, int* retVal);
  E_DLL0 int E_DLL1 WedgeGauge_HitTest_BOOL(void* impl, int* retVal);
  E_DLL0 int E_DLL1 WedgeGauge_getHitHandle_EasyGaugeDragHandle(void* impl, int* retVal);
  E_DLL0 int E_DLL1 WedgeGauge_getHitShape_Shape(void* impl, void** retVal);
  E_DLL0 int E_DLL1 WedgeGauge_Drag_INT32_INT32(void* impl, int x, int y);
  E_DLL0 int E_DLL1 WedgeGauge_Plot_DrawAdapter_EasyGaugePlotItem_FLOAT32_FLOAT32_FLOAT32_FLOAT32(void* impl, void* context, int drawItems, float width, float height, float originX, float originY);
  E_DLL0 int E_DLL1 WedgeGauge_Plot_DrawAdapter_EasyGaugePlotItem_FLOAT32_FLOAT32_FLOAT32(void* impl, void* context, int drawItems, float width, float height, float originX);
  E_DLL0 int E_DLL1 WedgeGauge_Plot_DrawAdapter_EasyGaugePlotItem_FLOAT32_FLOAT32(void* impl, void* context, int drawItems, float width, float height);
  E_DLL0 int E_DLL1 WedgeGauge_getDragable_BOOL(void* impl, int* retVal);
  E_DLL0 int E_DLL1 WedgeGauge_setDragable_BOOL(void* impl, int retVal);
  E_DLL0 int E_DLL1 WedgeGauge_getRotatable_BOOL(void* impl, int* retVal);
  E_DLL0 int E_DLL1 WedgeGauge_setRotatable_BOOL(void* impl, int retVal);
  E_DLL0 int E_DLL1 WedgeGauge_getResizable_BOOL(void* impl, int* retVal);
  E_DLL0 int E_DLL1 WedgeGauge_setResizable_BOOL(void* impl, int retVal);
  E_DLL0 int E_DLL1 WedgeGauge_getDraggingMode_EasyGaugeDraggingMode(void* impl, int* retVal);
  E_DLL0 int E_DLL1 WedgeGauge_setDraggingMode_EasyGaugeDraggingMode(void* impl, int retVal);
  E_DLL0 int E_DLL1 WedgeGauge_Save_ConstString_BOOL(void* impl, const char* pathName, int daughters);
  E_DLL0 int E_DLL1 WedgeGauge_Save_ConstString(void* impl, const char* pathName);
  E_DLL0 int E_DLL1 WedgeGauge_Load_ConstString_BOOL(void* impl, const char* pathName, int daughters);
  E_DLL0 int E_DLL1 WedgeGauge_Load_ConstString(void* impl, const char* pathName);
  E_DLL0 int E_DLL1 WedgeGauge_getType_ShapeType(void* impl, int* retVal);
  E_DLL0 int E_DLL1 WedgeGauge_Ctor(void** impl, int handle);
  E_DLL0 int E_DLL1 WedgeGauge_Set_Wedge(void* impl, void* wedge);
  E_DLL0 int E_DLL1 WedgeGauge_Set_Point_FLOAT32_FLOAT32_FLOAT32_BOOL(void* impl, void* center, float diameter, float breadth, float originAngle, int direct);
  E_DLL0 int E_DLL1 WedgeGauge_Set_Point_FLOAT32_FLOAT32_FLOAT32(void* impl, void* center, float diameter, float breadth, float originAngle);
  E_DLL0 int E_DLL1 WedgeGauge_Set_Point_FLOAT32_FLOAT32_FLOAT32_FLOAT32(void* impl, void* center, float diameter, float breadth, float originAngle, float amplitude);
  E_DLL0 int E_DLL1 WedgeGauge_Set_Point_Point_FLOAT32_BOOL(void* impl, void* center, void* origin, float breadth, int direct);
  E_DLL0 int E_DLL1 WedgeGauge_Set_Point_Point_FLOAT32(void* impl, void* center, void* origin, float breadth);
  E_DLL0 int E_DLL1 WedgeGauge_Set_Point_Point_Point_FLOAT32_BOOL(void* impl, void* origin, void* middle, void* end, float breadth, int full);
  E_DLL0 int E_DLL1 WedgeGauge_Set_Point_Point_Point_FLOAT32(void* impl, void* origin, void* middle, void* end, float breadth);
  E_DLL0 int E_DLL1 WedgeGauge_SetRadii_FLOAT32_FLOAT32(void* impl, float radius, float breadth);
  E_DLL0 int E_DLL1 WedgeGauge_SetDiameters_FLOAT32_FLOAT32(void* impl, float diameter, float breadth);
  E_DLL0 int E_DLL1 WedgeGauge_getInnerRadius_FLOAT32(void* impl, float* retVal);
  E_DLL0 int E_DLL1 WedgeGauge_getOuterRadius_FLOAT32(void* impl, float* retVal);
  E_DLL0 int E_DLL1 WedgeGauge_getInnerDiameter_FLOAT32(void* impl, float* retVal);
  E_DLL0 int E_DLL1 WedgeGauge_getOuterDiameter_FLOAT32(void* impl, float* retVal);
  E_DLL0 int E_DLL1 WedgeGauge_getBreadth_FLOAT32(void* impl, float* retVal);
  E_DLL0 int E_DLL1 WedgeGauge_getInnerArcLength_FLOAT32(void* impl, float* retVal);
  E_DLL0 int E_DLL1 WedgeGauge_getOuterArcLength_FLOAT32(void* impl, float* retVal);
  E_DLL0 int E_DLL1 WedgeGauge_getOrgAngle_FLOAT32(void* impl, float* retVal);
  E_DLL0 int E_DLL1 WedgeGauge_getApexAngle_FLOAT32(void* impl, float* retVal);
  E_DLL0 int E_DLL1 WedgeGauge_getEndAngle_FLOAT32(void* impl, float* retVal);
  E_DLL0 int E_DLL1 WedgeGauge_getAmplitude_FLOAT32(void* impl, float* retVal);
  E_DLL0 int E_DLL1 WedgeGauge_getInnerOrg_Point(void* impl, void** retVal);
  E_DLL0 int E_DLL1 WedgeGauge_getOuterOrg_Point(void* impl, void** retVal);
  E_DLL0 int E_DLL1 WedgeGauge_getInnerApex_Point(void* impl, void** retVal);
  E_DLL0 int E_DLL1 WedgeGauge_getOuterApex_Point(void* impl, void** retVal);
  E_DLL0 int E_DLL1 WedgeGauge_getInnerEnd_Point(void* impl, void** retVal);
  E_DLL0 int E_DLL1 WedgeGauge_getOuterEnd_Point(void* impl, void** retVal);
  E_DLL0 int E_DLL1 WedgeGauge_getDirect_BOOL(void* impl, int* retVal);
  E_DLL0 int E_DLL1 WedgeGauge_GetMidEdges_Point_Point_Point_Point(void* impl, void** a, void** A, void** r, void** R);
  E_DLL0 int E_DLL1 WedgeGauge_GetCorners_Point_Point_Point_Point(void* impl, void** ar, void** Ar, void** aR, void** AR);
  E_DLL0 int E_DLL1 WedgeGauge_GetEdges_Line_Line_Circle_Circle(void* impl, void** a, void** A, void** r, void** R);
  E_DLL0 int E_DLL1 WedgeGauge_getTolerance_FLOAT32(void* impl, float* retVal);
  E_DLL0 int E_DLL1 WedgeGauge_setTolerance_FLOAT32(void* impl, float retVal);
  E_DLL0 int E_DLL1 WedgeGauge_getActiveEdges_INT32(void* impl, int* retVal);
  E_DLL0 int E_DLL1 WedgeGauge_setActiveEdges_INT32(void* impl, int retVal);
  E_DLL0 int E_DLL1 WedgeGauge_getMeasuredWedge_Wedge(void* impl, void** retVal);
  E_DLL0 int E_DLL1 WedgeGauge_GetPoint_FLOAT32_FLOAT32_Point(void* impl, float breadthFraction, float angleFraction, void** retVal);
  E_DLL0 int E_DLL1 WedgeGauge_getRectangularSamplingArea_BOOL(void* impl, int* retVal);
  E_DLL0 int E_DLL1 WedgeGauge_setRectangularSamplingArea_BOOL(void* impl, int retVal);
#ifdef EVISION_CLR
  E_DLL0 void E_DLL1  WedgeGauge_SetCallback(void** impl, [System::Runtime::InteropServices::MarshalAs(System::Runtime::InteropServices::UnmanagedType::FunctionPtr)]System::Delegate* callback, int handle);
#else
E_DLL0 void E_DLL1  WedgeGauge_SetCallback(void** impl, void* callback, int handle);
#endif //EVISION_CLR
    E_DLL0 void E_DLL1 WedgeGauge_GetWrapper(int* handle, void* impl);
  E_DLL0 int E_DLL1 WedgeGauge_Dtor(void* impl);
}

#endif // E_EXTERN_C_BUILD
#endif // __EINSPECT_EXTERNC_INTERFACE_H__
